name: CI/CD Pipeline

on:
  push:
    branches: [ master, beta, develop ]
  pull_request:
    branches: [ master, beta ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/assetrix-demo
  
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Generate test coverage
      run: npm test -- --coverage

  build-scan-push:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Log in to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
  
        - name: Build Docker image
          run: |
            docker build -t myapp:latest .
            docker tag ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
  
        - name: Scan Docker image with Trivy
          uses: aquasecurity/trivy-action@0.20.0
          with:
            scan-type: image
            image-ref: ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
            format: sarif
            output: trivy-results.sarif
            exit-code: 1
            vuln-type: os,library
            severity: CRITICAL,HIGH

        - name: Upload Trivy scan results
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: trivy-results.sarif

        - name: Push Docker image
          if: success() # only push if scan passed
          run: |
            docker push ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.33.0'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        chmod +x ./ops/scripts/deploy.sh
        ./ops/scripts/deploy.sh ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
